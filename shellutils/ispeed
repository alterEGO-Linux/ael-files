#!/usr/bin/env bash
# :----------------------------------------------------------------------- INFO
# :[~/.ael/shellutils/ispeed]
# :author        : AlterEGO Linux
# :created       : 2024-05-16 14:54:18 UTC
# :updated       : 2025-08-13 17:15:40 UTC
# :description   : Internet connection speed meter.

ispeed() {

    local ARGUMENTS_INPUT=("${@}")
    local BROWSER
    local METHODS
    local SELECTION

    ispeed_usage() {
      cat <<EOF
================================================================================
[+] ispeed - Calculate Internet connection speed.
================================================================================
Usage: ispeed [--fzf|--web METHOD|--cli METHOD|--git METHOD|--help]

ispeed offers different ways to calculate your Internet speed.

--fzf       Uses fzf to display and select a method.
--cli       Uses a local application. Requires a METHOD.
--git       Uses git, curl, wget etc. to run command.
            Requires a METHOD.
--web       Uses default browser. Requires a METHOD.

METHODS:
    - (cli) speedtest
            Uses the speedtest-cli package.
    - (git) speedtest
            Uses curl and python.
            URL: https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py
    - (web) speedtest
            URL: https://www.speedtest.net/
    - (web) Fast.com
            URL: https://fast.com
    - (web) speedof.me
            URL: https://speedof.me/

================================================================================
EOF
    }

    use_fzf() {

        SELECTION=$(printf "%s\n" "${METHODS[@]}" | ael-fzf -p "iSPEED METHODS")
    }

    run_method() {
        if [[ -n "${SELECTION}" ]]; then
            echo "[-] ispeed - Using $SELECTION"
            echo
            if [[ "${SELECTION}" == "(cli) speedtest" ]]; then
                if [[ $(command -v speedtest) ]]; then
                    command speedtest --secure
                else
                    echo "[!] This METHOD requires 'speedtest-cli' package."
                fi
            elif [[ "${SELECTION}" == "(git) speedtest" ]]; then
                if [[ $(command -v curl) ]]; then
                    command curl -s https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py \
                    | command python - --secure
                else
                    echo "[!] This METHOD requires 'curl' package."
                fi
            elif [[ "${SELECTION}" == "(web) speedtest" ]]; then
                ${BROWSER} "https://www.speedtest.net/"

            elif [[ "${SELECTION}" == "(web) Fast.com" ]]; then
                ${BROWSER} "https://fast.com"

            elif [[ "${SELECTION}" == "(web) speedof.me" ]]; then
                ${BROWSER} "https://speedof.me/"
            fi
        else
            echo "[!] ispeed - Aborting..."
        fi
    }

    ispeed_unsetter() {
        unset -f run_method use_fzf
        unset -f ispeed_usage
        unset -f ispeed_unsetter
    }

    METHODS=("(cli) speedtest"
             "(git) speedtest"
             "(web) speedtest"
             "(web) Fast.com"
             "(web) speedof.me")

    BROWSER="${BROWSER:-xdg-open}"

    # :: No arguments.
    if [[ $# == 0 ]]; then
        use_fzf
        run_method
        ispeed_unsetter
        return 0
    fi

    # :: Show help and ignore other arguments.
    local i
    for i in "${ARGUMENTS_INPUT[@]}"; do
        if [[ "${i}" == "-h" || "${i}" == "--help" ]]; then
            ispeed_usage
            ispeed_unsetter
            return 0
        fi
    done

    # :: Arguments parser.
    for i in "${!ARGUMENTS_INPUT[@]}"; do
        if [[ "${ARGUMENTS_INPUT[i]}" == "--fzf" ]]; then
            use_fzf
            run_method
            ispeed_unsetter
            return 0
        elif [[ "${ARGUMENTS_INPUT[i]}" == "--cli" ]]; then
            if [[ -n "${ARGUMENTS_INPUT[i+1]}" && "${ARGUMENTS_INPUT[i+1]}" == "speedtest" ]]; then
                SELECTION="(cli) speedtest"
                run_method
                ispeed_unsetter
                return 0
            else
                ispeed_usage
                echo
                echo "[!] --cli requires a valid argument."
                ispeed_unsetter
                return 1
            fi
        elif [[ "${ARGUMENTS_INPUT[i]}" == "--git" ]]; then
            if [[ -n "${ARGUMENTS_INPUT[i+1]}" && "${ARGUMENTS_INPUT[i+1]}" == "speedtest" ]]; then
                SELECTION="(git) speedtest"
                run_method
                ispeed_unsetter
                return 0
            else
                ispeed_usage
                echo
                echo "[!] --git requires a valid argument."
                ispeed_unsetter
                return 1
            fi

        elif [[ "${ARGUMENTS_INPUT[i]}" == "--web" ]]; then
            if [[ -n "${ARGUMENTS_INPUT[i+1]}" ]]; then
                if [[ "${ARGUMENTS_INPUT[i+1]}" == "speedtest" ]]; then
                    SELECTION="(web) speedtest"
                    run_method
                    ispeed_unsetter
                    return 0
                elif [[ "${ARGUMENTS_INPUT[i+1]}" == "Fast.com" ]]; then
                    SELECTION="(web) Fast.com"
                    run_method
                    ispeed_unsetter
                    return 0
                elif [[ "${ARGUMENTS_INPUT[i+1]}" == "speedof.me" ]]; then
                    SELECTION="(web) speedof.me"
                    run_method
                    ispeed_unsetter
                    return 0
                else
                    ispeed_usage
                    echo
                    echo "[!] --web requires a valid argument."
                    ispeed_unsetter
                    return 1
                fi
            else
                ispeed_usage
                echo
                echo "[!] --web requires a valid argument."
                ispeed_unsetter
                return 1
            fi
        fi
    done

    # :: Garbage argument collector.
    ispeed_usage
    echo
    echo "[!] No valid arguments found."
    ispeed_unsetter
    return 1
}
