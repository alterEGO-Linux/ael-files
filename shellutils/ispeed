#!/usr/bin/env bash
# :----------------------------------------------------------------------- INFO
# :[~/.ael/shellutils/ispeed]
# :author        : AlterEGO Linux
# :created       : 2024-05-16 14:54:18 UTC
# :updated       : 2025-03-08 17:15:40 UTC
# :description   : Internet connection speed meter.

ispeed() {

    local args=("$@") METHODS SELECTION

    usage() {
      cat <<EOF
================================================================================
[+] ispeed - Calculate Internet connection speed.
================================================================================
Usage: ispeed [--fzf|--web METHOD|--cli METHOD|--git METHOD|--help]

ispeed offers different ways to calculate your Internet speed.

METHODS:
    - (cli) speedtest
            Uses the speedtest-cli package.
    - (git) speedtest
            Uses curl and python.
            URL: https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py
    - (web) speedtest
            URL: https://www.speedtest.net/
    - (web) Fast.com
            URL: https://fast.com
    - (web) speedof.me
            URL: https://speedof.me/

================================================================================
EOF
    }

    use_fzf() {

        SELECTION=$(printf "%s\n" "${METHODS[@]}" \
                    | command fzf)
    }

    run_method() {
        if [[ -n "${SELECTION}" ]]; then
            echo "[-] ispeed - Using $SELECTION"
            echo
            if [[ "${SELECTION}" == "(cli) speedtest" ]]; then
                if [[ $(command -v speedtest) ]]; then
                    command speedtest --secure
                else
                    echo "[!] This METHOD requires 'speedtest-cli' package."
                fi
            elif [[ "${SELECTION}" == "(git) speedtest" ]]; then
                if [[ $(command -v curl) ]]; then
                    command curl -s https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py \
                    | command python - --secure
                else
                    echo "[!] This METHOD requires 'curl' package."
                fi
            elif [[ "${SELECTION}" == "(web) speedtest" ]]; then
                ${BROWSER} "https://www.speedtest.net/"

            elif [[ "${SELECTION}" == "(web) Fast.com" ]]; then
                ${BROWSER} "https://fast.com"

            elif [[ "${SELECTION}" == "(web) speedof.me" ]]; then
                ${BROWSER} "https://speedof.me/"
            fi
        else
            echo "[!] ispeed - Aborting..."
        fi
    }

    unsetter() {
        unset -f run_method usage use_fzf
    }

    METHODS=("(cli) speedtest"
             "(git) speedtest"
             "(web) speedtest"
             "(web) Fast.com"
             "(web) speedof.me")

    BROWSER="${BROWSER:-xdg-open}"

    if [[ $# == 0 ]]; then
        use_fzf
        run_method
        unsetter && unset -f unsetter
        return 0
    fi

    for i in "${!args[@]}"; do
        if [[ "${args[i]}" == "-h" ]] || [[ "${args[i]}" == "--help" ]]; then
            usage
            unsetter && unset -f unsetter
            return 0
        elif [[ "${args[i]}" == "--fzf" ]]; then
            use_fzf
            run_method
            unsetter && unset -f unsetter
            return 0
        elif [[ "${args[i]}" == "--cli" ]]; then
            if [[ -n "${args[i+1]}" && "${args[i+1]}" == "speedtest" ]]; then
                SELECTION="(cli) speedtest"
                run_method
                unsetter && unset -f unsetter
                return 0
            else
                usage
                echo
                echo "[!] --cli requires a valid argument."
                unsetter && unset -f unsetter
                return 1
            fi
        elif [[ "${args[i]}" == "--git" ]]; then
            if [[ -n "${args[i+1]}" && "${args[i+1]}" == "speedtest" ]]; then
                SELECTION="(git) speedtest"
                run_method
                unsetter && unset -f unsetter
                return 0
            else
                usage
                echo
                echo "[!] --git requires a valid argument."
                unsetter && unset -f unsetter
                return 1
            fi
        elif [[ "${args[i]}" == "--web" ]]; then
            if [[ -n "${args[i+1]}" ]]; then
                if [[ "${args[i+1]}" == "speedtest" ]]; then
                    SELECTION="(web) speedtest"
                    run_method
                    unsetter && unset -f unsetter
                    return 0
                elif [[ "${args[i+1]}" == "Fast.com" ]]; then
                    SELECTION="(web) Fast.com"
                    run_method
                    unsetter && unset -f unsetter
                    return 0
                elif [[ "${args[i+1]}" == "speedof.me" ]]; then
                    SELECTION="(web) speedof.me"
                    run_method
                    unsetter && unset -f unsetter
                    return 0
                else
                    usage
                    echo
                    echo "[!] --web requires a valid argument."
                    unsetter && unset -f unsetter
                    return 1
                fi
            else
                usage
                echo
                echo "[!] --web requires a valid argument."
                unsetter && unset -f unsetter
                return 1
            fi
        fi
    done

    usage
    echo
    echo "[!] No valid arguments found."
    unsetter && unset -f unsetter
    return 1
}
