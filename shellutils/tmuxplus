#!/usr/bin/env sh
# :----------------------------------------------------------------------- INFO
# :[~/.ael/shellutils/tmuxplus]
# :author        : AlterEGO Linux
# :created       : 2020-10-15 17:14:53 UTC
# :updated       : 2025-07-08 16:50:36 UTC
# :description   : TMUX wrapper.

tmuxplus() {

    local RED=$'\033[31m'
    local RESET=$'\033[0m'
    local __cmd
    local __session
    local ARGUMENT_INPUT=("${@}")

    tmux_unsetter() {
        unset -f in_tmux_session
        unset -f tmux_access_session
        unset -f tmux_background
        unset -f tmux_usage
        unset -f tmux_wrapper
        unset -f tmux_unsetter
    }

    in_tmux_session() {

        # :: Evaluates if inside a TMUX session.
 
        if command env | command grep -q TMUX; then
            return 0
        else
            return 1
        fi
    }

    tmux_access_session() {

        # :: ref. https://github.com/nwallace/dotfiles/blob/master/scripts/bin/functions
        # :: Select and access TMUX sessions from FZF.

        __session="$(command tmux ls -F '#{session_name}' | ael-fzf -p SESSIONS)"

        if [[ -n "${__session}" ]]; then
            in_tmux_session    
            if [[ $? == "0" ]]; then
                env TERM=screen-256color tmux -u switch-client -t "${__session}"
            else
                env TERM=screen-256color tmux -u a -t "${__session}"
            fi
        else
            printf '%s\n' "${RED}[!]${RESET} Nothing selected."
        fi
    }

    tmux_background() {

        # :: Send commands to a detached session.

        command tmux new-session -d -s ${__session}
        sleep 0.5
        command tmux send-keys -t ${__session} "${__cmd}" enter
    }

    tmux_wrapper() {

        # :: Generate a temporary session to run a command and exit.

        __session=$(echo TEMP${RANDOM})

        env TERM=screen-256color tmux -u new-session -d -s "${__session}"
        command tmux send-keys -t "${__session}" "${__cmd} && exit 0" enter
    }

    tmux_usage() {
        cat <<EOF
Usage: tmuxplus [OPTIONS] <session>

A wrapper around TMUX.

Options:
  -a, --access                     Uses fzf to attach or switch to a session.
  -b, --background                 Run a command in a detached session.
  -h, --help                       Display this help message.
  -w, --wrapper                    Generate a temporary session to run a command and exit.
                                   Useful to launch a GUI from the terminal.

Examples:
  tmuxplus -b LOOP "while true; do echo WHAT; done"
                                   # Create a session called LOOP and echo WHAT
                                     until terminated manually.
  tmuxplus -w libreoffice          # Launches libreoffice and exit the tmux
                                     session when quitting libreoffice.
EOF
    }

    # :: Show help if no arguments.
    if [[ "${#}" -eq 0 ]]; then
        tmux_usage
        tmux_unsetter
        return 1
    fi

    # :: Show help and ignore other arguments.
    local __arg
    for __arg in "${ARGUMENT_INPUT[@]}"; do
        if [[ "${__arg}" == "-h" || "${__arg}" == "--help" ]]; then
            tmux_usage
            tmux_unsetter
            return 0
        fi
    done

    case ${1} in
        -a|--access )
            tmux_access_session
            tmux_unsetter
            ;;

        -b|--background )
            shift
            __session="${1}"
            __cmd="${2}"
            tmux_background
            tmux_unsetter
            ;;

        -w|--wrapper )
            shift
            __cmd="${1}"
            tmux_wrapper
            tmux_unsetter
            ;;

        * )
            tmux_usage
            tmux_unsetter
            ;;
    esac
}
